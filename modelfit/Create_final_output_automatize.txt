
  
# Prepare the files to run the model

rm(list=ls())

#packages
library(raster)
library(sf)
library(maptools)
library(rgeos)

path="C:/R/Projects/OCEAN/Tool_R_codes/DOM"
envdir=paste(path,"/environmental_data/", sep="")
oceandir=paste(path, "/output/", sep="")
azores_shp="D:/GIS/Azores/Cartografia/Az/Admin/Shapefiles Azores/Azores WGS84"
path_powershell="C:/R/Projects/OCEAN/PowerShell/"

get_date=Sys.Date()

write.csv(get_date,paste(envdir, "get_date_start.csv"))

#get_date=as.character(Sys.Date()-1)

#needs log to verify there is a raster from the specific day

# Specify the path to your raster file
rasterDF<-raster(paste(oceandir, "Predictions_fit_",get_date, ".tif",sep=""))

# Attempt to get data values
data_values <- rasterDF[]

data_values <- data_values[!is.na(data_values)]

# Print the result
print(data_values)

write.csv(data_values,paste(envdir, "data_values.csv"))

#Choose threshold for minimum value of grid cells values
#quantile 95%

threshold_area <- quantile(data_values,0.95)

regions_shp <- rasterToPolygons(rasterDF, fun=function(x){x>threshold_area},na.rm = T, dissolve = T)

#plot(regions_shp,axes=T)

#convert SpatialPolygonsDataFrame to an sf object (library sf)
regions_shp_sf<-st_as_sf(regions_shp)

#merge adjacent polygons (library maptools)
pol1 <- st_as_sf(unionSpatialPolygons(as_Spatial(regions_shp_sf),rep(1, nrow(regions_shp_sf))))

# Save as GeoJSON
sf::write_sf(pol1, paste(envdir, "pol1.geojson"), driver = "GeoJSON")

pol1_sp <- sf:::as_Spatial(pol1)

write.csv(get_date,paste(envdir, "get_date_mid.csv"))

for(i in 1:length(pol1_sp@polygons[[1]]@Polygons)){
  
  coords<- as.data.frame(pol1_sp@polygons[[1]]@Polygons[[i]]@coords)
  area <- round(pol1_sp@polygons[[1]]@Polygons[[i]]@area, digits=2)
  area<-as.data.frame(rep(area, nrow(coords)))
  ID<-i
  ID<-as.data.frame(rep(ID, nrow(coords)))
  df<-cbind(coords, area,ID)
  
  if(i==1){
    df1<-df} else {
      df2<-rbind(df1,df)
      df1<-df2
    }
}

colnames(df2)[3] <- "area"
colnames(df2)[4] <- "ID"

#select polygon larger than 1 grid cell
df3 <- df2[which(df2$area > min(df2$area)),]

write.csv(df3,paste(envdir, "df3.csv"))


# Remove the "Area" column
df3 <- subset(df3, select = -c(area))

buildings_df<-df3

# make a list
buildings_list <- split(buildings_df, buildings_df$ID)

# only want lon-lats in the list, not the names
buildings_list <- lapply(buildings_list, function(x) { x["ID"] <- NULL; x })

ps <- lapply(buildings_list, Polygon)

# add id variable
p1 <- lapply(seq_along(ps), function(i) Polygons(list(ps[[i]]), ID = names(buildings_list)[i]  ))

# create SpatialPolygons object
my_spatial_polys <- SpatialPolygons(p1, proj4string = CRS("+proj=longlat +datum=WGS84") ) 

write.csv(get_date,paste(envdir, "get_date.csv"))

##add Azores
azores <- read_sf(paste0(azores_shp,'/Azores.shp'))
zee <- read_sf(paste0(azores_shp,'/ZEE.shp'))

###plot both plots together
# Set layout using layout()

png(paste0(oceandir,"Azores_Polygons_defined_",get_date, sep="",'.png'),width=8,height=6.5,units="in",res=300) 
par(mar=c(4,4,2,2))
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
plot(regions_shp,axes=T)
plot(azores,add=T)
plot(pol1_sp,axes=T)
plot(azores,add=T)
par(mar=c(2,14,2,14))
plot(my_spatial_polys,axes=T)
plot(azores,add=T)
dev.off()

##EEZ Azores
png(paste0(oceandir,"Zee_Polygons_defined_",get_date, sep="",'.png'),width=8,height=6.5,units="in",res=300) 
par(mar=c(4,4,2,2))
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
plot(zee$geometry,axes=T)
plot(regions_shp,add=T)
plot(azores,add=T)
plot(zee$geometry,axes=T)
plot(pol1_sp,add=T)
plot(azores,add=T)
par(mar=c(2,14,2,14))
plot(zee$geometry,axes=T)
plot(my_spatial_polys,add=T)
plot(azores,add=T)
dev.off()

##Reorganize output for sending 

#dynamic directories
current_datetime <- Sys.time()

#add 10 minutes to have an overlap of 5 minutes between the creation of the output and the time the info is sent to CIMNE
current_datetime_10m<-current_datetime+ 1*10*60

# Eliminate characters after the first space
modified_vector <- sub(" -", "", current_datetime_10m)

#Expiration date
expiration_date<-current_datetime_10m+ 1*24*60*60

# Eliminate characters after the first space
expiration_date <- sub(" -", "", expiration_date)

#expiration_date<-paste(expiration_date, expiration_time, sep= )
# "2024-05-07 10:42:49"
#class "character"

nlev_ID<-nlevels(factor(df3$ID))                   
lev_ID<-levels(factor(df3$ID)) 

for(j in 1:nlev_ID){
  
  df_short <- subset(df3, df3$ID==lev_ID[j])
  
  coords<- as.data.frame(df_short[,1:2])
  
  for(i in 1:nrow(coords)){
    
    coords_vector<- as.character(coords[i,])
    
    vector<- paste0("[", coords_vector[1],",", coords_vector[2], "]")
    
    if(i==1){
      
      df1<-vector
      
    } 
    
    else {
      
      df2<-paste0(df1,",", vector)
      df1<-df2
    }
    
    ###Add ID and ; and [] at the stard and end of the vector
    
    df_new<-paste0(modified_vector,";",expiration_date,";MM;LW;SPW;9999;","[",df1, "]")
    
  }
  
  if(j==1){
    
    df_middle<-df_new
    
  } 
  
  else {
    
    df_final<-rbind(df_middle,df_new)
    df_middle<-df_final
  }
}



##Add ts;exp;type;cat;spc;qty;loc
#2024-01-23 19:15:59;;MM;LW;SPW;12;[[-25.401407221798493,36.881959031030505],[-25.428609579126984,36.9319590410305]]

df_final_2<-as.data.frame(df_final)

row_names<-"ts;exp;type;cat;spc;qty;loc"

df_final_2<-rbind(row_names,df_final_2)

# Remove row names from an existing data frame
rownames(df_final_2) <- NULL
colnames(df_final_2) <- NULL


# Write the data frame to a CSV file
write.csv(df_final_2,paste(oceandir,"df_final.csv"),row.names = FALSE, col.names = FALSE,quote = FALSE)

#write.csv(df_final_2,paste(path_powershell,"MM_output_new_old.csv"),row.names = FALSE, col.names = FALSE,quote = FALSE)


#write.csv(df_final_2,paste(path_powershell,"MM_output_new_old.csv"),row.names = FALSE, col.names = FALSE)

write.csv(df_final_2,"C:/R/Projects/OCEAN/PowerShell/MM_output_new_old.csv",row.names = FALSE, col.names = FALSE,quote = FALSE)

